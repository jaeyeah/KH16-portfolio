/*
    CSS (Cascading Style Sheets)
    : html 로 만든 구조에 디자인을 입히는 언어

    디자인 파일 (css)
    - <style> 내부에 작성하는 디자인 코드만 보관하는 파일
    - html에서 불러올 때는 <link> 태그를 사용
    - html 파일에서 이 디자인 파일을 불러오면 자동으로 대상을 찾아서 디자인을 적용
    - 홈페이지에서 자주 사용하는 디자인 코드를 모아서 이곳에 저장
*/
        
        *{
            box-sizing: border-box;
            font-family: 고딕;
        }

        /* 영역을 시각화하는 테스트 디자인 코드 */
        /* div{
            box-shadow: 0 0 1px 0 gray;
        } */
        /*----------------------------------------------*/
        /*----------------------------------------------*/
        /* 컨테이너와 셀 디자인
            - 컨테이너(container) : 작은 화면 한 개를 표현하기 위한 단위영역
                        - '폭'과 '가운데 정렬'이 중요
                        - 자주 사용하는 폭을 전부 다 정의해둠 (마치 운동화처럼)
            - 셀(cell) : 컨테이너 안에 배치되는 하나의 공간
                        - '다른 셀과의 간격'이 중요
        */
        .container{
            margin : 0 auto; /*가운데 정렬만 시킨다, 폭은 따로 클래스를 만들어버림*/
        }

        .w-25{ width: 25% !important; }
        .w-50{ width: 50% !important; }
        .w-75{ width: 75% !important; }
        .w-100{ width: 100% !important; }

        .w-200{ width: 200px !important; }
        .w-250{ width: 250px !important; }
        .w-300{ width: 300px !important; }
        .w-350{ width: 350px !important; }
        .w-400{ width: 400px !important; }
        .w-450{ width: 450px !important; }
        .w-500{ width: 500px !important; }
        .w-550{ width: 550px !important; }
        .w-600{ width: 600px !important; }
        .w-650{ width: 650px !important; }
        .w-700{ width: 700px !important; }
        .w-750{ width: 750px !important; }
        .w-800{ width: 800px !important; }
        .w-850{ width: 850px !important;}
        .w-900{ width: 900px !important; }
        .w-950{ width: 950px !important; }
        .w-1000{ width: 1000px !important; }
        .w-1050{ width: 1050px !important; }
        .w-1100{ width: 1100px !important; }

        .cell{
            margin:10px 0;
        }
        /* 셀의 기본을 만들어놓고,
            여백을 모듈화 시켜서 클래스로 구현
            - 여백에는 방향이 존재 (top, botto, left, right)
            - 클래스에 방향까지 지정 가능하도록 규격화   
        */
        .mt-0{margin-top: 0!important;}
        .mt-10{margin-top: 10px!important;}
        .mt-20{margin-top: 20px!important;}
        .mt-30{margin-top: 30px!important;}
        .mt-40{margin-top: 40px!important;}
        .mt-50{margin-top: 50px!important;}

        .mb-0{margin-bottom: 0!important;}
        .mb-10{margin-bottom: 10px!important;}
        .mb-20{margin-bottom: 20px!important;}
        .mb-30{margin-bottom: 30px!important;}
        .mb-40{margin-bottom: 40px!important;}
        .mb-50{margin-bottom: 50px!important;}
        
        .ms-0{margin-left: 0!important;} /*ml이라고 잘 안해서 ms (margin-start)*/
        .ms-10{margin-left: 10px!important;}
        .ms-20{margin-left: 20px!important;}
        .ms-30{margin-left: 30px!important;}
        .ms-40{margin-left: 40px!important;}
        .ms-50{margin-left: 50px!important;}

        .me-0{margin-right: 0!important;}/*me (margin-end)*/
        .me-10{margin-right: 10px!important;}
        .me-20{margin-right: 20px!important;}
        .me-30{margin-right: 30px!important;}
        .me-40{margin-right: 40px!important;}
        .me-50{margin-right: 50px!important;}

        /* 정렬 스타일 */
        .left{text-align: left !important;}
        .center{text-align: center !important;}
        .right{text-align: right !important;}
        /*----------------------------------------------*/
        /*----------------------------------------------*/
        /* 
            입력창 디자인 (input/select/textarea)
        */
        .field{
            outline : none;      /* 기본 강조효과 제거 */
            font-size: 16px;    /* 기본 글자크기 지정 */
            padding : 0.5em 0.75em;
            border :1px solid #636e72;
            border-radius : 0.1em;
        }
        .field:focus{
            border-color:#464e51;
        }
        textarea.field{ /*텍스트에어리어일때만*/
            resize:vertical;
        }

          /*----------------------------------------------*/
            /* 이미지가 포함된 입력창*/
            .field.field-image{
            padding-left: 3em;
            /* background-image: url("./images/mail.png") ; */
            background-size: 1.8em;
            background-repeat: no-repeat;
            background-position: 0.5em center
        }



        /* 
            버튼 디자인 ( button / a 태그)
            - a태그와 button을 동일하게 디자인
            - 버튼마다 역할이 다름 -> 용도에 따라 디자인 다르게
                - 긍정버튼 : 현재 페이지의 목적을 달성할 수 있거나 긍정적인 영향을 주는 작업 버튼
                - 부정버튼 : 현재 페이지의 목적이 부정적인 경우 (수정/삭제) 위험성을 알려주는 버튼
                - 중립버튼 : 현재 페이지의 목적과 관계없는 작업버튼
        */
        .btn{
            /*  공통 적용 */
            outline:none;
            font-size:16px;
            padding:0.5em 0.75em;
            cursor : pointer;
            border : 1px solid #636e72;
            border-radius: 0.1em;
            /* a태그까지 고려한 디자인 추가 */
            text-decoration: none;
            color:#2d3436;
            background-color: #f2f2f2;
            display : inline-block; /* a태그를 button의 diplay로 통일시켜준다  */
            text-align:center;
        }
        .btn.btn-positive{
            background-color:#0984e3;
            border-color: #0984e3;
            color:white;
        }
        .btn.btn-negative{
            background-color:#d63031;
            border-color: #d63031;
            color:white;
        }
        .btn.btn-neutral{
            background-color: #636e72;
            border-color: #636e72;
            color:white;
        }
        .btn:hover{  /* 마우스 가져다 놨을 때, 밝기 조절(어둡게)*/
            /* filter: brightness(0.8); */
            filter:brightness(80%);
        }
       /*----------------------------------------------*/
        /*-글자 색상 클래스--------*/
        .red{color:#d63031 !important}
        .orange{color:#e17055 !important}
        .yellow{color:#fdcb6e !important}
        .green{color:#00b894 !important}
        .blue{color:#0984e3 !important}
        .purple{color:#6c5ce7 !important}
        .black{color:#2d3436 !important}
        .gray{color:#b2bec3 !important}
        .white{color:white !important}


         /*----------------------------------------------*/
        /* 테이블 디자인
            - 모든 태그에 클래스를 붙일 수 없기 때문에, 탐색을 통해 태그를 찾아야 한다
            - 자식선택자 (>)를 이용하면 대상의 바로 앙래 있는 태그를 찾을 수 있다.
            - 후손성택자 (   )를 이용하면 대상의 내부에 있느 태그를 포괄적으로 찾을 수 있다
            - 테이블이 중첩될 수 있기 때문에 다소 길더라도 자식 선택자(>)를 사용하는 것을 권장

            - .table>thead>tr>th :: 특정 위치의 th
                : 길게 말하는 대신 정확한 위치를 지정할 수 있음
            - .table th 테이블 안의 모든 th 
                : 전체를 선택해야 하는 상황 or 몇개인지 모를때 선택
                
                
            ** border-collapse : 테이블이 겹칠경우 어떻게 처리할 것인지 
                */
        
        .table{
            /* border: 1px solid rgb(95, 95, 95); */
            border-collapse:collapse;
            font-size: 16px;
            font-weight: 400 !important;
        }
        .table>thead>tr>th,
        .table>thead>tr>td,
        .table>tbody>tr>th,
        .table>tbody>tr>td,
        .table>tfoot>tr>th,
        .table>tfoot>tr>td {
            /* border: 1px solid rgb(95, 95, 95); */
            font-size: inherit;
            font-weight: inherit ;
            /* inherit (디자인 상속) : 가장 가까운 외부영역의 규칙을 따라라 */
            text-align: center;
            padding : 0.25em;
        }

        /* 확장 스타일 1번 - 테두리가 있는 테이블 */
        .table.table-border,
        .table.table-border > thead > tr > th,
        .table.table-border > thead > tr > td,
        .table.table-border > tbody > tr > th,
        .table.table-border > tbody > tr > td,
        .table.table-border > tfoot > tr > th,
        .table.table-border > tfoot > tr > td
        {
            border: 1px solid rgb(95, 95, 95);
        }

        /* 확장 스타일 2번 - 마우스에 반응하는 테이블
          -- 보통 thead랑 tfoot은 강조 효과가 필요없다*/
        .table.table-hover>tbody>tr:hover
        {
            background-color: #c4c4c4;
            color:white;
        }
        .table.table-hover>tbody>tr :hover
        {
            background-color: #6d6d6d;
            color:white;
        }
        /* 확장 스타일 3번 - 줄무늬 테이블
           ** 패턴지정 확장자 nth-child
           - n이라는 글자를 쓰면 n=1,2,3,4,5,.. 로 변하며 적용
          - nth-child(1)  1번째
          - nth-child(2n) 2n번째(짝수) */
        .table.table.table-striped > thead > tr{
            background-color: #858796;
            color:white;
        }
        .table.table.table-striped > tbody > tr:nth-child(2n){
            background-color: #f7f3f3;
        }



        /*----------------------------------------------*/
        /* 페이지 네비게이터 디자인  */
        .pagenation{
            text-align: center;
            font-size:px;
        }
        .pagenation>a {
                text-decoration: none;  /*a태그 밑줄제거*/
                color:rgb(82, 82, 82);
                padding : 0.5em;
                display:inline-block;
                cursor: pointer;
                min-width: 2.5em;
                /* border:2px solid transparent; 투명색 테두리 */
            }
         .pagenation>a:hover,
         .pagenation>a.on
          {
                /* border:2px solid rgb(121, 121, 121); */
                /* box-shadow: x y b s color; */
                box-shadow:  3px 3px 5px 3px rgba(145, 145, 145, 0.795);
            }


  /*----------------------------------------------*/
          /* float 화면구성  */
        .float-box > .float-left{
            float:left;
        }
        .float-box > .flolat-right{
            float:right;
        }
        .float-box::after{
            content: "";
            display:block;
            clear:both;
        }


  /*----------------------------------------------*/
                /* Flexiboe 디자인 */
        .flex-box{
            display:flex;
            flex-direction: row;
        }
        .inline-flex-box{
            display:inline-flex;
            flex-direction: row;
        }
        /* 세로형 배치를 원할 경우 */
        .flex-box.flex-vertical,
        .inline-flex-box.flex-vertical{
            flex-direction:column;
        }

        /* 플렉스 배치 내에서 나머지를 모두 차지 */
        .flex-box>.flex-fill,
        .inline-flex-box>.flex-fill{
            flex-grow:1;
        }
        /* 크기가 충분할 경우 정가운데 배치 */
        .flex-box.flex-center,
        .inline-flex-box.flex-center{
            justify-content:center;
            align-items:center;
        }
  /*----------------------------------------------*/
 /* 기본 메뉴 디자인 */
        .menu{
            background-color: #ffffff;
            display:flex;
        }
        .menu>.divider{
            margin-left:auto;
            margin-right:auto;
        }
        .menu>a{
            text-decoration: none;
            color:rgb(0, 0, 0);
            display: inline-block;
            width:130px;
            text-align:center;
            font-size:20px;
            padding: 0.5em;
        /* 
            혹시라도 넘어가면 말줄임표 처리
            - 반드시 세 가지 속성이 모두 존재해야 함
            - 폭(width), 넘침(overflow), 글자 넘침(text-overflow), 줄바꿈(whitespace)
        */
        white-space: nowrap;
        overflow:hidden;
        text-overflow:ellipsis;
        }
        .menu>a:hover{
             background-color:#dbdeff;
             font-weight: 550;
             white-space: initial;
        }
        .menu:hover{
             background-color: #fafaff;
        }


        /* 말줄임표 설정 클래스 */
        .ellipsis {
        white-space: nowrap;
        overflow:hidden;
        text-overflow:ellipsis;
        }




/* 입력창 성공실패 디자인 */
                /*목표 : .field에 .success / .fail이 추가된 상황에서의 디자인 */
        .field.success{
            border-color: #0984e3 !important;
        }
        .field.fail{
            border-color: #d63031 !important
        }
        .field.fail2{
            border-color: #d63031 !important
        }
        /* 기본적으로 피드백은 모두 숨김 처리 */
        .success-feedback,
        .fail-feedback,
        .fail2-feedback
        {
            display:none;
        }
        /* 성공 피드백 디자인 */
        .success-feedback{
            color:#0984e3;
        }
        /* 실패 피드백 디자인 */
        .fail-feedback{
            color:#d63031;
        }
        .fail2-feedback{
            color:#d63031;
        }
        /* 검사에 성공한 입력창 뒤에 있는 성공 피드백을 표시 */
        .field.success ~ .success-feedback{
            display:block;
        }
        /* 검사에 실패한 입력창 뒤에 있는 실패 피드백을 표시 */
        .field.fail ~ .fail-feedback{
            display:block;
        }
        .field.fail2 ~ .fail2-feedback{
            display:block;
        }
